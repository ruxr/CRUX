# Description:	CRUX Linux kernel
# URL:		https://github.com/ruxr/CRUX
# Maintainer:	Roman Oreshnikov, r dot oreshnikov at gmail dot com
# Depends on:	coreutils dash eudev kmod sed util-linux
# Post-install:	yes

name=core
version=3.6
release=1
REL=$(uname -r)
source=(core.sh init
	https://cdn.kernel.org/pub/linux/kernel/v${REL%%.*}.x/linux-$REL.tar.xz)

build() {
	DIR=/usr/src/linux-$REL

	# Build kernel
	if [ -d $DIR ]; then
		rm -r linux-$REL
	else
		rm -rf /usr/src/linux-*
		mkdir -p /usr/src
		mv linux-$REL /usr/src
		make -C $DIR mrproper
		if [ -s /boot/config ]; then
			cp /boot/config $DIR/.config
			make -C $DIR olddefconfig
		else
			make -C $DIR defconfig
			make -C $DIR localmodconfig
		fi
	fi
	make -C $DIR all

	# Create initrd
	Use() {
		# coreutils
		echo /bin/{readlink,sleep}
		# dash
		echo /bin/dash
		# eudev
		echo /sbin/{udevadm,udevd} $(pkginfo -l eudev |
			sed '/\/$/d;/udev\//!d;s%^%/%;/conf$/d')
		# kmod
		echo /sbin/*mod*
		# sed
		echo /bin/sed
		# util-linux
		echo /bin/{mount,umount} /sbin/switch_root
	}
	Req() {
		local A F N
		A="$*" N=; shift
		for F do
			if [ ! -f $F ]; then echo Missing $F; exit 1; fi
			echo $F
			F=$([ -L $F ] && readlink -f $F || ldd $F 2>/dev/null |
				sed '/\//!d;s%^[^/]*/%/%;s/ .*//;s%/\./%/%g
					s%[^/]*/\.\./%%g;s%/lib64/%/lib/%')
			for F in $F; do
				case " $A$N " in *\ $F\ *) continue;; esac
				N=$N\ $F
			done
		done
		[ -z "$N" ] || Req "$A" $N
	}

	mkdir rootfs
	cd rootfs
	make -C $DIR INSTALL_MOD_PATH=$(pwd -P) modules_install
	rm lib/modules/$REL/{build,source}

	# May add yours modules from linux-firmware package
	# cp -r /lib/firmware lib

	install -d dev mnt proc run sys 
	install $SRC/init .

	Req "" $(Use) >../initrd.use
	tar -cf - -T ../initrd.use | tar -xf -

	mv bin/dash bin/sh

	# Opimize eudev files
	sed -i '/^#/d;/^$/d;s/\(GROUP=\)"[^"]*"/\1"0"/' \
		etc/udev/hwdb.d/* lib/udev/rules.d/*

	ldconfig -r $(pwd -P)
	find . | sort | cpio -o -H newc | gzip -9 >$SRC/initrd-$REL
	cd ..

	mkdir -p $PKG/boot core/boot
	cd core
	mv $SRC/initrd-$REL boot
	cp $DIR/.config boot/config-$REL
	cp $DIR/System.map boot/System.map-$REL
	cp $DIR/arch/x86/boot/bzImage boot/vmlinuz-$REL
	make -C $DIR INSTALL_MOD_PATH=$(pwd -P) modules_install
	{ sed "s/#REL#/$REL/g" $SRC/core.sh; tar -cJf - *
	} >$SRC/post-install
}
